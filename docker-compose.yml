services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
      - API_TIMEOUT=15
      - DEVELOPMENT_MODE=true
      - USE_MOCK_API=false
    volumes:
      - ./frontend/static:/app/static:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - respiratory-network

  redis:
    image: redis:6
    command: redis-server --requirepass "${CACHE_PASSWORD}" --appendonly yes --save 60 1000
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - respiratory-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      - respiratory-network

  backend:
    build:
      context: ./backend
    env_file:
      - .env
    environment:
      - CACHE_HOST=redis
      - POSTGRES_HOST=db
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    networks:
      - respiratory-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - respiratory-network

volumes:
  redis-data:
  postgres-data:

networks:
  respiratory-network:
    driver: bridge
